openapi: 3.0.3
info:
  version: 3.1.0
  title: Digicore
servers:
  - url: 'http://{host}:{port}/'
    description: develop
    variables:
      host:
        default: localhost
      port:
        default: '8000'
tags:
  - name: auth
    description: Authentication system
  - name: user
    description: User system
paths:
  /status:
    get:
      description: Server status check
      responses:
        '200':
          description: All Systems Operational
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetStatus'
        '500':
          $ref: '#/components/responses/InternalServer'
  /signup:
    get:
      tags:
        - auth
      description: Get signup URL
      responses:
        '200':
          description: Signup URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetSignup'
  /signup/callback:
    post:
      tags:
        - auth
      description: Verify auth
      requestBody:
        description: Auth information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqPostSignupCallback'
      responses:
        '200':
          description: Success signup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResPostSignupCallback'
        '500':
          $ref: '#/components/responses/InternalServer'
  /login:
    get:
      tags:
        - auth
      description: Get login URL
      responses:
        '200':
          description: Login URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetLogin'
  /login/callback:
    post:
      tags:
        - auth
      description: Verify auth
      requestBody:
        description: Auth information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqPostLoginCallback'
      responses:
        '200':
          description: Success signup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResPostLoginCallback'
        '500':
          $ref: '#/components/responses/InternalServer'
  /user:
    get:
      tags:
        - user
      description: Get user list
      security:
        - BearerAuth: []
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
        - name: seed
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Success get user list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetUser'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServer'
  /user/me:
    get:
      tags:
        - user
      description: Get my profile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success get my profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetUserMe'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServer'
    put:
      tags:
        - user
      description: Update my profile
      security:
        - BearerAuth: []
      requestBody:
        description: My profile
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqPutUserMe'
      responses:
        '200':
          description: Success update my profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetUserMe'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServer'
  /user/me/discord:
    get:
      tags:
        - user
      description: Get discord login URL
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Discord login URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetUserMeDiscord'
  /user/me/discord/callback:
    post:
      tags:
        - user
      description: Verify discord auth
      security:
        - BearerAuth: []
      requestBody:
        description: Auth information
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqPostUserMeDiscordCallback'
      responses:
        '200':
          description: Success signup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetUserMe'
        '500':
          $ref: '#/components/responses/InternalServer'
  /user/me/introduction:
    get:
      tags:
        - user
      description: Get my introduction
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success get my introduction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetUserMeIntroduction'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServer'
    put:
      tags:
        - user
      description: Update my introduction
      security:
        - BearerAuth: []
      requestBody:
        description: My introduction
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqPutUserMeIntroduction'
      responses:
        '200':
          description: Success update my introduction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetUserMeIntroduction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServer'
  /user/me/private:
    get:
      tags:
        - user
      description: Get my private profile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success get my private profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetUserMePrivate'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServer'
    put:
      tags:
        - user
      description: Update my profile
      security:
        - BearerAuth: []
      requestBody:
        description: My profile
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqPutUserMePrivate'
      responses:
        '200':
          description: Success update my private profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetUserMePrivate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServer'
  /user/me/payment:
    get:
      tags:
        - user
      description: Get my payment
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Success get my payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResGetUserMePayment'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServer'
    put:
      tags:
        - user
      description: Update my payment
      security:
        - BearerAuth: []
      requestBody:
        description: My payment
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReqPutUserMePayment'
      responses:
        '200':
          description: Success update my payment
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResGetUserMePayment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServer'
components:
  schemas:
    ResGetStatus:
      required:
        - status
      properties:
        status:
          type: boolean
    ResGetSignup:
      required:
        - url
      properties:
        url:
          type: string
    ReqPostSignupCallback:
      required:
        - code
      properties:
        code:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
            ja: 認証コード
    ResPostSignupCallback:
      required:
        - jwt
      properties:
        jwt:
          type: string
    ResGetLogin:
      required:
        - url
      properties:
        url:
          type: string
    ReqPostLoginCallback:
      required:
        - code
      properties:
        code:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
            ja: 認証コード
    ResPostLoginCallback:
      required:
        - jwt
      properties:
        jwt:
          type: string
    ResGetUser:
      required:
        - user
      properties:
        user:
          type: array
          items:
            $ref: '#/components/schemas/ResGetUserObjectUser'
    ResGetUserObjectUser:
      required:
        - userId
        - username
        - iconUrl
        - shortIntroduction
      properties:
        userId:
          type: string
        username:
          type: string
        iconUrl:
          type: string
        shortIntroduction:
          type: string
    ResGetUserMe:
      required:
        - userId
        - username
        - studentNumber
        - iconUrl
        - schoolGrade
        - discordUserID
        - shortIntroduction
        - activeLimit
      properties:
        userId:
          type: string
        username:
          type: string
        studentNumber:
          type: string
        iconUrl:
          type: string
        schoolGrade:
          type: integer
        discordUserID:
          type: string
        shortIntroduction:
          type: string
        activeLimit:
          type: string
    ReqPutUserMe:
      required:
        - username
        - iconUrl
        - schoolGrade
        - shortIntroduction
      properties:
        username:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: ユーザー名
        iconUrl:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: アイコンURL
        schoolGrade:
          type: integer
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=9'
            ja: 学年
        shortIntroduction:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: 短い自己紹介
    ResGetUserMeIntroduction:
      required:
        - introduction
      properties:
        introduction:
          type: string
    ReqPutUserMeIntroduction:
      required:
        - introduction
      properties:
        introduction:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1'
            ja: 自己紹介
    ResGetUserMePrivate:
      required:
        - lastName
        - lastNameKana
        - firstName
        - firstNameKana
        - isMale
        - phoneNumber
        - address
        - parentName
        - parentCellphoneNumber
        - parentHomephoneNumber
        - parentAddress
      properties:
        lastName:
          type: string
        lastNameKana:
          type: string
        firstName:
          type: string
        firstNameKana:
          type: string
        isMale:
          type: boolean
        phoneNumber:
          type: string
        address:
          type: string
        parentName:
          type: string
        parentCellphoneNumber:
          type: string
        parentHomephoneNumber:
          type: string
        parentAddress:
          type: string
    ReqPutUserMePrivate:
      required:
        - lastName
        - lastNameKana
        - firstName
        - firstNameKana
        - isMale
        - phoneNumber
        - address
        - parentName
        - parentCellphoneNumber
        - parentHomephoneNumber
        - parentAddress
      properties:
        lastName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: 名字
        lastNameKana:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: 名字(カナ)
        firstName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: 名前
        firstNameKana:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: 名前(カナ)
        isMale:
          type: boolean
          x-oapi-codegen-extra-tags:
            validate: null
            ja: 性別
        phoneNumber:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,numeric,min=1,max=15'
            ja: 電話番号
        address:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: 住所
        parentName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: 緊急連絡先氏名
        parentCellphoneNumber:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,numeric,min=1,max=15'
            ja: 緊急連絡先携帯電話番号
        parentHomephoneNumber:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,numeric,min=1,max=15'
            ja: 緊急連絡先固定電話番号
        parentAddress:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: 緊急連絡先住所
    ResGetUserMePayment:
      required:
        - history
      properties:
        history:
          type: array
          items:
            $ref: '#/components/schemas/ResGetUserMePaymentObjectHistory'
    ResGetUserMePaymentObjectHistory:
      required:
        - year
        - transferName
        - checked
        - updatedAt
      properties:
        year:
          type: integer
        transferName:
          type: string
        checked:
          type: boolean
        updatedAt:
          type: string
    ReqPutUserMePayment:
      required:
        - transferName
      properties:
        transferName:
          type: string
          x-oapi-codegen-extra-tags:
            validate: 'required,min=1,max=255'
            ja: 振込名義
    ResGetUserMeDiscord:
      required:
        - url
      properties:
        url:
          type: string
    ReqPostUserMeDiscordCallback:
      required:
        - code
      properties:
        code:
          type: string
          x-oapi-codegen-extra-tags:
            validate: required
            ja: 認証コード
    Error:
      required:
        - level
        - message
      properties:
        level:
          type: string
        message:
          type: string
  responses:
    BadRequest:
      description: 'Validation error, etc.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: 'Authentication error, etc.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: 'Resource does not exist, etc.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServer:
      description: 'System error, etc.'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
