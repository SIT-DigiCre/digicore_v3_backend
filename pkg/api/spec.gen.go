// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
