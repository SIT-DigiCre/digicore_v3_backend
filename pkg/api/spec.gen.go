// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"4Wr43wAAAP//yR0XiBksAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
