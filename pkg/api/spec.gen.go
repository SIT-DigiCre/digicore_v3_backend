// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"48pIaj0AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
