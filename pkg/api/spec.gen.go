// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
