// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
