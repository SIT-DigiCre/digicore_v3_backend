// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
