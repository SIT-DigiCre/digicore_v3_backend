// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
