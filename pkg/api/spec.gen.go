// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
