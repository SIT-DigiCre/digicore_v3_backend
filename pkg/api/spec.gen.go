// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"bWpzyOfB9FoVd7gc/hwAAP//xQHyIgsrAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
