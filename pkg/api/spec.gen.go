// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
