// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
