// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xaX28Txxb/Ktbc+3CvtInNP+leSzwEKDRtoChp6EOUh8nusT2wnllmZtO40Upp0qpA",
	"G8FLhVQeqv6BFqqUImgpf8qXMU7Ct6hmxl7vrnftjR1HlPYt3p0553fO+c2Z385kFdms7jEKVApUXkUc",
	"hMeoAP3jBHZm4bIPQqpfNqMSqP4Te55LbCwJo8WLglH1TNg1qGP11785VFAZ/avYNV00b0XxLc4ZR0EQ",
	"WMgBYXPiKSOojC5glzjaYgHUGKsA0p5EgYWmqQROsTsHfBn4+JHMNYSEehLFOSZPM5864/c/C4L53IaC",
	"w0AUKJMFWCFCdqHMU+zLGuPkIzgAOFO+rAGVbavxtARW27qmizFRXkUeZx5wSQyLXFgGV/0hGx6gMhKS",
	"E1pVgdRBCFyFlHeBhThc9glXES60TXQnLAYWmoXL55mQM6xK6EnsukvYvtTr3GZOin0LrUww7JEJ9boK",
	"dAJWJMcTElf1pIsYldHuvc3dH5831x82N543N64iCy0biio7IbggCVU7jOCbI1Xqe68rQF/OC+BnoRcX",
	"sRmd5+5w0Jrr3zbXv9fQHs7PzqRDs+qEHj9k1fHK8cPHjnXIxJh7huNYTgiVUAWey3Nr607ryaOBDv9v",
	"3NUYl3PgVqap5MzxbUP5YSLe+Xqr+fEnu5/daz1+sPPoyctnn+cO2heqvdWHZEFz446q//pvzY3nrRub",
	"Ob0mOBFCsMK6x4uRlaskj87jRr3diuJ0khxTUQF+buhAt7+4v/tChbjz4u5wUcYw9CDnZFmbSyLHjsNB",
	"iOFAv/zj+vbVtdxUqBAu5PApat3YbF3d3Lu3dzHFo3j8T3P9p+bGtf/m9kzEWexGg1xizAVM8xFh7YfW",
	"ldsxX9R3XWXXxaOmb+tm7iA6zkbL3tbNPWfPwxyonBqFlzuPr22v3X619t3Or9+0Pr2yR5oaACfBdb0a",
	"o3DOry8ZYTYykO0bT1u/339169nu3Qc7X95rXX+cAYr6deDEjoA7FMX2NqvDfmNr3Xra+vmr0bENT9Bk",
	"sn65nr/jW2jkfAwfelLOdZZpYhFFG2CyPYVNIx6IFfbnWHqzOJrFj+SiMruDOANGX/buCn6aNOrZVrkb",
	"sWSU4P6Yklj6oteUCJ8n+mrSXHtg12KWDMS2JMswQ+pEpkp4hwibcUdNnz6VOiJTSA7Ue/kVmhopfUdV",
	"P4PfbZ017WS+SpdgaUpp2kFWVDLFXWdLqHiusoKzYjlPVihTYNk1sC+Bk1Z7a4D6Ugnw1Ep2ptKL3ADM",
	"0+qTyI0elnBmhcCiTnqi2rP46i+WBoubfiKkr5AYuPEP3qDz76D597MBu8ug9v+X7dA5jgAufigHB6wG",
	"RUwO+mrfg03Vm8D2OZGNObsG9fbRGmAOfMqXNfVrSf86zXgdS1RG73zwPmqfrGhe6rdqZRl3NSk9s6kS",
	"WmEaB5GKyegUqRKbcZXdZeDCHOAcmTw0WVIMYB5Q7BH9qDR5RKdU1jScotvZ5qqgI4ufAZ0BWdAjCuZr",
	"XqVCHwepforCXdKKHx8eLpX27XgquhmnHFLNhODUO6NaFhBW6dUVMPEV7WhBmUiJ9AJwUmkU9MxknL1c",
	"M/UGIU8wp7GPsaacbGWczBUUBRRtzNbRpZ/kPgTjLUgukHO+bYMQBWHUT2ChYwZFmvEQbTFx6JtRVRFK",
	"qkzamiFZvG1rsrETt+0nLT9dfH2D3AfuJpraWMmb8PWasncwyvHSN5TrqfQ1kwtmVEHrqFQOGyvj57Dx",
	"k1ZK1y2YWxNReK8DD7vDZ0tnRynsohEzmau73ih4nFWIVh09mWl/1Iw9M20/fehTjWMNLHS0dGRwYmI3",
	"PXrS0cGTwpuqEcjaUSyovBDXKguLwWKXy6pEWjZ5fkqB5rXe71ej7v3D+JqR36c8Z6PQDrT75GKN35NA",
	"zYEcJY3c3A7LtYOhTmShF73ut23fBd8elrngz4cDRqogUf1sL6Xs+A1CpY45x408faE78+/VFzJK2XOf",
	"NP72EBYvvUvEcOxflzgIjvk96X6zu0j3LKm/bNDDBsuHztnUAe0HHXd5xEQ8gn9ERbJ5RCo35uaRXbTX",
	"QGLkoFRUaaSw6o3qFXqGmiz0hHhCHFgGl3nIMtcy+qytXCyu1piQQXnVY1wGRX35xQleck3hauHneAX7",
	"rkRl5DIbu/qx4jHjidf/K5VKqhxddKv9/+tK6K8rZCFzS2E+IgOrZ3EI9b2YGKvjDhaDPwMAAP//y2QB",
	"+OsnAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
