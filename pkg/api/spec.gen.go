// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xaW2/bRhb+K8LsPuwCtKXcgF0BeUh2N0EWyW5gr7MPhiGMySNpEnKGmRm6Vg0Crt2i",
	"SVojeSkCNA9FL0mbFG4aJG2aS/NnFNnOvyhmRqbEm0RJlhGkfbPI4TnfOeebMx8PvYZs5vmMApUCVdcQ",
	"B+EzKkD/OI2dObgagJDql82oBKr/xL7vEhtLwmj5smBUXRN2Ezys/vozhzqqoj+Ve6bL5q4o/4tzxlEY",
	"hhZyQNic+MoIqqJL2CWOtlgCtcYqgbRnUWihc1QCp9idB74CfPpI5ltCgpdE8R8mz7CAOtP3PweCBdyG",
	"ksNAlCiTJVglQvagLFAcyCbj5H04BDinAtkEKrtW42kJra51TRdjorqGfM584JIYFrmwAq76Q7Z8QFUk",
	"JCe0oQLxQAjcgIx7oYU4XA0IVxEudk30HlgKLTQHVy8yIc+zBqH/wK67jO0raec2czLsW2h1hmGfzKjb",
	"DaAzsCo5npG4oR+6jFEV7T3Y2vvuZXvjcXvzZXvzOrLQiqGoshOBC5NQtcM+fPOkQQP/bQUYyAUB/AKk",
	"cRGb0VrA3fGwtTe+am98o7E9Xpg7n43N8gg9ecTy8OrJoydO7LOJMbfW4DiWFUIlNIAXct3Zvtd59mSo",
	"x78bf03GZU2AW68RKjlzAtvQfpygd7/Ybn/w4d7HDzpPH+0+efb6xSeF4w6EanHemExob95THNj4ub35",
	"snNrq6DXBC8iCFav9omC5OcryaeLuOV1W1KcVpJjKurAa+NHu/Ppw71XKs7dV/fHCzUOIoWdkxVtL4kd",
	"Ow4HIcZD/frXmzvX1wsTok64kBMkqXNrq3N9awx3tSuY4kl8/qW98X1788ZfC/smouZhtz/OZcZcwLQY",
	"G9a/7Vy7G3NGA9dVhl08cQq3bxcOI/I2YQa3b4+cQR9zoLI2ET93n97YWb/7Zv3r3Z++7Hx0bUS6dhHY",
	"4Lp+k1Go0cBbNmJtYig7t553fnn45s6LvfuPdj970Ln5NAcWDTzgxO6DdySGrsk8OHB0nTvPOz98fgDo",
	"xidqMl8/3ix+CFho8oyMH3xS5kUbNrWdYh0x3a96XSQRkBV17Xii8ymbT5fURjMnhzgLRoWmT4xM/ZQ6",
	"eLnbZ8noxYMxJbEMRNqUiK4n+m3SXHdhz2KeWMS2JCtQc4lHZKbSd4iwGXdqSmQQJ3NJvuAcrgtHUXJq",
	"rQwczYQc0ncFWS0Hab5Yy9JUyorVr64S3gfJrUTa8qO04iVIVixXjtlNsK+Ak8UFa5hWU5nw1UZ3aji7",
	"6i3APKtaiSzpZUl3VoQt5iYV2chibYi4KiKGBoqWwcKjgFAocKCPcuKOcv4NO42GHhfvSEcvMFi4/J4c",
	"Hr5a1Gdy2CxgBJuqi4EdcCJb83YTvO7ADjAHfiqQTfVrWf86w7in9if69///h7rzGs1XfVftO+OuKaVv",
	"jmRC60zjIFIxHP2TNIjNuErxCnBhxkLHZo/MVhQhmA8U+0Rfqswe0zmVTQ2n7O4fiw3QkcUnS2dBlvSK",
	"khkRqFToIdM5x9w1p6oVH0oerVQObOjVf3hnjL7OR+DUPaN5FhFW6dUVMPGV7f6CMpER6SXgpN4q6SeT",
	"caa5ZuoNQp5mTusAY82Yl+XM+0qKAoo25mzp0U/yAMLpFqQQyPnAtkGIkjBqKbTQCYMiy3iEtpwYJedU",
	"VUQSLJe2Zkkeb7saburE7frJyk8P38AgD4C7iaY2VfImfL2l7B2Ocrr0jeR9Jn3NwyWzqqRFViaHjZXp",
	"c9j4ySql65bMtxhR+u8+POyOny2dHSWly0bb5O5ur1XyOasTLT5Smem+BE09M10/A+jTiGMNLXS8cmx4",
	"YmLfj/RDx4c/FH3/moCs+4oFVRfjWmVxKVzqcVmVSMsmP8go0IJ+GRhUo95Xjek1o2BAeS70QzvU7lOI",
	"NUEqgZoDBUra9z14XK4dDnX6NnrZ7737Dtzw3WW5G/5itGCiChLVz0Yp5b7fMFLqmHPcKtIXek/+vvpC",
	"TilTX6em3x6i4mV3iRiOg+sSh8GxIJXud7uL9OZMg2WDXjZcPuzPrQ7pPNh3V0RMxCP4Q1Qkm0df5abc",
	"PPKL9hZIjAKU6lcaGax6p3qFfkI9LPQD8YQ4sAIu85FlPuPoWVu1XF5rMiHD6prPuAzL+tMZJ3jZNYVr",
	"Rq/jdRy4ElWRy2zs6suKx4wnbv+tUqmocvTQrQ3+Xy6h366Qhcy017xEhlZqcwj1vphYq+MOl8LfAgAA",
	"//8BsBICQSgAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
